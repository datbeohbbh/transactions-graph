// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: graph.proto

package graph

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vertex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Type      string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	TxEdges   []string             `protobuf:"bytes,3,rep,name=txEdges,proto3" json:"txEdges,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Vertex) Reset() {
	*x = Vertex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vertex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vertex) ProtoMessage() {}

func (x *Vertex) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vertex.ProtoReflect.Descriptor instead.
func (*Vertex) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{0}
}

func (x *Vertex) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Vertex) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vertex) GetTxEdges() []string {
	if x != nil {
		return x.TxEdges
	}
	return nil
}

func (x *Vertex) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Vertex) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Vertices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vertices []*Vertex `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
}

func (x *Vertices) Reset() {
	*x = Vertices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vertices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vertices) ProtoMessage() {}

func (x *Vertices) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vertices.ProtoReflect.Descriptor instead.
func (*Vertices) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{1}
}

func (x *Vertices) GetVertices() []*Vertex {
	if x != nil {
		return x.Vertices
	}
	return nil
}

type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Address     string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Status      int64                `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	TxHash      string               `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	BlockNumber string               `protobuf:"bytes,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Value       string               `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	EventLog    []string             `protobuf:"bytes,7,rep,name=eventLog,proto3" json:"eventLog,omitempty"`
	Direct      int32                `protobuf:"varint,8,opt,name=direct,proto3" json:"direct,omitempty"`
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{2}
}

func (x *Tx) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tx) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Tx) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Tx) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Tx) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *Tx) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Tx) GetEventLog() []string {
	if x != nil {
		return x.EventLog
	}
	return nil
}

func (x *Tx) GetDirect() int32 {
	if x != nil {
		return x.Direct
	}
	return 0
}

type Txs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*Tx `protobuf:"bytes,1,rep,name=Txs,proto3" json:"Txs,omitempty"`
}

func (x *Txs) Reset() {
	*x = Txs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Txs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txs) ProtoMessage() {}

func (x *Txs) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txs.ProtoReflect.Descriptor instead.
func (*Txs) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{3}
}

func (x *Txs) GetTxs() []*Tx {
	if x != nil {
		return x.Txs
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// common field
	Address  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ObjectID string `protobuf:"bytes,2,opt,name=objectID,proto3" json:"objectID,omitempty"`
	// for Vertex
	AccountType string `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	// for TxEdges
	TxHash      string `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	BlockNumber string `protobuf:"bytes,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Direct      int32  `protobuf:"varint,6,opt,name=direct,proto3" json:"direct,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{4}
}

func (x *Query) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Query) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Query) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *Query) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Query) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *Query) GetDirect() int32 {
	if x != nil {
		return x.Direct
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{5}
}

var File_graph_proto protoreflect.FileDescriptor

var file_graph_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x78, 0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x78, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x35, 0x0a, 0x08,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x65, 0x73, 0x22, 0xf4, 0x01, 0x0a, 0x02, 0x54, 0x78, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x22, 0x0a, 0x03, 0x54, 0x78,
	0x73, 0x12, 0x1b, 0x0a, 0x03, 0x54, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x78, 0x52, 0x03, 0x54, 0x78, 0x73, 0x22, 0xb1,
	0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x9a, 0x03, 0x0a, 0x09,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0d, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x0c,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x39, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x42, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x0c, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x09, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x54, 0x78, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54,
	0x78, 0x42, 0x79, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x09, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x54, 0x78, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x0a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x78, 0x73,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x78, 0x42, 0x79, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54,
	0x78, 0x73, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x78, 0x42, 0x79, 0x45,
	0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0a, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x54, 0x78, 0x73, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_graph_proto_rawDescOnce sync.Once
	file_graph_proto_rawDescData = file_graph_proto_rawDesc
)

func file_graph_proto_rawDescGZIP() []byte {
	file_graph_proto_rawDescOnce.Do(func() {
		file_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_graph_proto_rawDescData)
	})
	return file_graph_proto_rawDescData
}

var file_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_graph_proto_goTypes = []interface{}{
	(*Vertex)(nil),              // 0: graph.Vertex
	(*Vertices)(nil),            // 1: graph.Vertices
	(*Tx)(nil),                  // 2: graph.Tx
	(*Txs)(nil),                 // 3: graph.Txs
	(*Query)(nil),               // 4: graph.Query
	(*Empty)(nil),               // 5: graph.Empty
	(*timestamp.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_graph_proto_depIdxs = []int32{
	6,  // 0: graph.Vertex.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 1: graph.Vertex.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: graph.Vertices.vertices:type_name -> graph.Vertex
	6,  // 3: graph.Tx.createdAt:type_name -> google.protobuf.Timestamp
	2,  // 4: graph.Txs.Txs:type_name -> graph.Tx
	4,  // 5: graph.GraphData.GetVertexByAddress:input_type -> graph.Query
	5,  // 6: graph.GraphData.GetAllVertex:input_type -> graph.Empty
	4,  // 7: graph.GraphData.GetVertexByAccountType:input_type -> graph.Query
	4,  // 8: graph.GraphData.GetTxByObjectID:input_type -> graph.Query
	4,  // 9: graph.GraphData.GetTxByTxHash:input_type -> graph.Query
	4,  // 10: graph.GraphData.GetTxByAddress:input_type -> graph.Query
	4,  // 11: graph.GraphData.GetTxByBlockNumber:input_type -> graph.Query
	4,  // 12: graph.GraphData.GetTxByEdgeDirection:input_type -> graph.Query
	0,  // 13: graph.GraphData.GetVertexByAddress:output_type -> graph.Vertex
	1,  // 14: graph.GraphData.GetAllVertex:output_type -> graph.Vertices
	1,  // 15: graph.GraphData.GetVertexByAccountType:output_type -> graph.Vertices
	2,  // 16: graph.GraphData.GetTxByObjectID:output_type -> graph.Tx
	2,  // 17: graph.GraphData.GetTxByTxHash:output_type -> graph.Tx
	3,  // 18: graph.GraphData.GetTxByAddress:output_type -> graph.Txs
	3,  // 19: graph.GraphData.GetTxByBlockNumber:output_type -> graph.Txs
	3,  // 20: graph.GraphData.GetTxByEdgeDirection:output_type -> graph.Txs
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_graph_proto_init() }
func file_graph_proto_init() {
	if File_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vertex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vertices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Txs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_graph_proto_goTypes,
		DependencyIndexes: file_graph_proto_depIdxs,
		MessageInfos:      file_graph_proto_msgTypes,
	}.Build()
	File_graph_proto = out.File
	file_graph_proto_rawDesc = nil
	file_graph_proto_goTypes = nil
	file_graph_proto_depIdxs = nil
}
