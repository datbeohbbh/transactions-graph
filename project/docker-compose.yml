# dev version
version: "3.9"

services:
  worker-service:
    build:
      context: ./../worker-service
      dockerfile: ./../worker-service/worker.dockerfile
    restart: always
    ports:
      - "50001"
    depends_on:
      - mongo
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/worker-service.env
    
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker.dockerfile
    container_name: broker
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - worker-service
      - nginx
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/broker-service.env

  address-manager-service:
    build:
      context: ./../address-manager-service
      dockerfile: ./../address-manager-service/address-manager-service.dockerfile
    restart: always
    ports:
      - "50002"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - worker-service
    env_file:
      - ./env/address-manager.env
    
  nginx:
    image: "nginx:latest"
    container_name: nginx
    ports:
      - "50052:50052"
    depends_on:
      - worker
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

  mongo:
    image: "mongo:latest"
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - ./env/mongo.env
    volumes:
      # config mongo when it start for the first time. When mongo start
      # for the first time, it will execute all file with extensions *.sh and *.js
      # with MONGO_INTIDB_DATABASE, *.js will be executed by mongo to init database
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db

volumes:
  mongo-data:
    external: true